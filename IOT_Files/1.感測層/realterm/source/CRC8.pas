unit CRC8;
{ Implement fast CRC8 calculations

SMBUS CRC os x^8 + x^2 + x^1 + 1
For checking see:
http://smbus.org/faq/crc8Applet.htm

test case: 01,02,03=0x48

CReference Code taken from:  http://openpaste.org/en/1714/

Dallas 1 wire CRC is X^8 + X^5 + X^4 + 1
http://www.maxim-ic.com/appnotes.cfm/an_pk/27

test case: 02 1C B8 = 1E

sjb 29Aug07
}

interface

  function CRC8_SMBUS( msg :string ) :char;
  function CRC8_DALLAS( msg :string ) :char;

implementation
// CRC-8, poly = x^8 + x^2 + x^1 + x^0
const CRC8_TABLE_SMBUS: array[0..255] of byte = (
    $00, $07, $0E, $09, $1C, $1B, $12, $15, $38, $3F, $36,
    $31, $24, $23, $2A, $2D, $70, $77, $7E, $79, $6C, $6B, $62,
    $65, $48, $4F, $46, $41, $54, $53, $5A, $5D, $E0, $E7, $EE,
    $E9, $FC, $FB, $F2, $F5, $D8, $DF, $D6, $D1, $C4, $C3, $CA,
    $CD, $90, $97, $9E, $99, $8C, $8B, $82, $85, $A8, $AF, $A6,
    $A1, $B4, $B3, $BA, $BD, $C7, $C0, $C9, $CE, $DB, $DC, $D5,
    $D2, $FF, $F8, $F1, $F6, $E3, $E4, $ED, $EA, $B7, $B0, $B9,
    $BE, $AB, $AC, $A5, $A2, $8F, $88, $81, $86, $93, $94, $9D,
    $9A, $27, $20, $29, $2E, $3B, $3C, $35, $32, $1F, $18, $11,
    $16, $03, $04, $0D, $0A, $57, $50, $59, $5E, $4B, $4C, $45,
    $42, $6F, $68, $61, $66, $73, $74, $7D, $7A, $89, $8E, $87,
    $80, $95, $92, $9B, $9C, $B1, $B6, $BF, $B8, $AD, $AA, $A3,
    $A4, $F9, $FE, $F7, $F0, $E5, $E2, $EB, $EC, $C1, $C6, $CF,
    $C8, $DD, $DA, $D3, $D4, $69, $6E, $67, $60, $75, $72, $7B,
    $7C, $51, $56, $5F, $58, $4D, $4A, $43, $44, $19, $1E, $17,
    $10, $05, $02, $0B, $0C, $21, $26, $2F, $28, $3D, $3A, $33,
    $34, $4E, $49, $40, $47, $52, $55, $5C, $5B, $76, $71, $78,
    $7F, $6A, $6D, $64, $63, $3E, $39, $30, $37, $22, $25, $2C,
    $2B, $06, $01, $08, $0F, $1A, $1D, $14, $13, $AE, $A9, $A0,
    $A7, $B2, $B5, $BC, $BB, $96, $91, $98, $9F, $8A, $8D, $84,
    $83, $DE, $D9, $D0, $D7, $C2, $C5, $CC, $CB, $E6, $E1, $E8,
    $EF, $FA, $FD, $F4, $F3
    );


const CRC8_TABLE_DALLAS : Array[0..255] of Byte = (

	0, 94, 188, 226, 97, 63, 221, 131, 194, 156, 126, 32, 163, 253, 31, 65,
	157, 195, 33, 127, 252, 162, 64, 30, 95, 1, 227, 189, 62, 96, 130, 220,
	35, 125, 159, 193, 66, 28, 254, 160, 225, 191, 93, 3, 128, 222, 60, 98,
	190, 224, 2, 92, 223, 129, 99, 61, 124, 34, 192, 158, 29, 67, 161, 255,
	70, 24, 250, 164, 39, 121, 155, 197, 132, 218, 56, 102, 229, 187, 89, 7,
	219, 133, 103, 57, 186, 228, 6, 88, 25, 71, 165, 251, 120, 38, 196, 154,
	101, 59, 217, 135, 4, 90, 184, 230, 167, 249, 27, 69, 198, 152, 122, 36,
	248, 166, 68, 26, 153, 199, 37, 123, 58, 100, 134, 216, 91, 5, 231, 185,
	140, 210, 48, 110, 237, 179, 81, 15, 78, 16, 242, 172, 47, 113, 147, 205,
	17, 79, 173, 243, 112, 46, 204, 146, 211, 141, 111, 49, 178, 236, 14, 80,
	175, 241, 19, 77, 206, 144, 114, 44, 109, 51, 209, 143, 12, 82, 176, 238,
	50, 108, 142, 208, 83, 13, 239, 177, 240, 174, 76, 18, 145, 207, 45, 115,
	202, 148, 118, 40, 171, 245, 23, 73, 8, 86, 180, 234, 105, 55, 213, 139,
	87, 9, 235, 181, 54, 104, 138, 212, 149, 203, 41, 119, 244, 170, 72, 22,
	233, 183, 85, 11, 136, 214, 52, 106, 43, 117, 151, 201, 74, 20, 246, 168,
	116, 42, 200, 150, 21, 75, 169, 247, 182, 232, 10, 84, 215, 137, 107, 53);




function Crc8Char( msg :string; CRC8_TABLE: array of byte ) :char;
var crc: byte; i:integer;  ch:byte;
begin
  crc := 0;
  for i := 1 to length(msg) do begin
    ch:=byte(msg[i]);
    crc := CRC8_TABLE[ crc xor ch];
  end;
  result:= char(crc);
end;

function CRC8_SMBUS( msg :string ) :char;
begin
  result:=Crc8Char( msg, CRC8_TABLE_SMBUS);
end;

function CRC8_DALLAS( msg :string ) :char;
begin
  result:=Crc8Char( msg, CRC8_TABLE_DALLAS);
end;

end.
