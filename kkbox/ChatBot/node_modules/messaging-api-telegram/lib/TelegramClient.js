'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};


var _axios = require('axios');var _axios2 = _interopRequireDefault(_axios);
var _axiosError = require('axios-error');var _axiosError2 = _interopRequireDefault(_axiosError);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _asyncToGenerator(fn) {return function () {var gen = fn.apply(this, arguments);return new Promise(function (resolve, reject) {function step(key, arg) {try {var info = gen[key](arg);var value = info.value;} catch (error) {reject(error);return;}if (info.done) {resolve(value);} else {return Promise.resolve(value).then(function (value) {step("next", value);}, function (err) {step("throw", err);});}}return step("next");});};} /* eslint-disable camelcase */
















class TelegramClient {
  static connect(accessTokenOrConfig) {
    return new TelegramClient(accessTokenOrConfig);
  }





  constructor(accessTokenOrConfig) {
    let origin;
    if (accessTokenOrConfig && typeof accessTokenOrConfig === 'object') {
      const config = accessTokenOrConfig;

      this._token = config.accessToken;
      origin = config.origin;
    } else {
      this._token = accessTokenOrConfig;
    }

    this._axios = _axios2.default.create({
      baseURL: `${origin || 'https://api.telegram.org'}/bot${this._token}/`,
      headers: {
        'Content-Type': 'application/json' } });


  }

  get axios() {
    return this._axios;
  }

  get accessToken() {
    return this._token;
  }

  _request(...args) {var _this = this;return _asyncToGenerator(function* () {
      try {
        const response = yield _this._axios.post(...args);const

        data = response.data,config = response.config,request = response.request;

        if (!data.ok) {
          throw new _axiosError2.default(`Telegram API - ${data.description || ''}`, {
            config,
            request,
            response });

        }

        return data.result;
      } catch (err) {
        if (err.response && err.response.data) {var _err$response$data =
          err.response.data;const error_code = _err$response$data.error_code,description = _err$response$data.description;
          const msg = `Telegram API - ${error_code} ${description || ''}`; // eslint-disable-line camelcase

          throw new _axiosError2.default(msg, err);
        }
        throw new _axiosError2.default(err.message, err);
      }})();
  }

  /**
     * https://core.telegram.org/bots/api#getupdates
     */
  getUpdates(options) {
    return this._request('/getUpdates', _extends({},
    options));

  }

  /**
     * https://core.telegram.org/bots/api#getwebhookinfo
     */
  getWebhookInfo() {
    return this._request('/getWebhookInfo');
  }

  /**
     * https://core.telegram.org/bots/api#setwebhook
     */
  setWebhook(url) {
    return this._request('/setWebhook', {
      url });

  }

  /**
     * https://core.telegram.org/bots/api#deletewebhook
     */
  deleteWebhook() {
    return this._request('/deleteWebhook');
  }

  /**
     * https://core.telegram.org/bots/api#getme
     */
  getMe() {
    return this._request('/getMe');
  }

  /**
     * https://core.telegram.org/bots/api#getuserprofilephotos
     */
  getUserProfilePhotos(userId, options) {
    return this._request('/getUserProfilePhotos', _extends({
      user_id: userId },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#getfile
     */
  getFile(fileId) {
    return this._request('/getFile', {
      file_id: fileId });

  }

  /**
     * Get link for file. This is extension method of getFile()
     */
  getFileLink(fileId) {
    return this.getFile(fileId).then(
    result =>
    `https://api.telegram.org/file/bot${this._token}/${result.file_path}`);

  }

  /**
     * https://core.telegram.org/bots/api#getchat
     */
  getChat(chatId) {
    return this._request('/getChat', {
      chat_id: chatId });

  }

  /**
     * https://core.telegram.org/bots/api#getchatmemberscount
     */
  getChatAdministrators(chatId) {
    return this._request('/getChatAdministrators', {
      chat_id: chatId });

  }

  /**
     * https://core.telegram.org/bots/api#getchatmemberscount
     */
  getChatMembersCount(chatId) {
    return this._request('/getChatMembersCount', {
      chat_id: chatId });

  }

  /**
     * https://core.telegram.org/bots/api#getchatmemberscount
     */
  getChatMember(chatId, userId) {
    return this._request('/getChatMember', {
      chat_id: chatId,
      user_id: userId });

  }

  /**
     * https://core.telegram.org/bots/api#sendmessage
     */
  sendMessage(chatId, text, options) {
    return this._request('/sendMessage', _extends({
      chat_id: chatId,
      text },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#sendphoto
     */
  sendPhoto(chatId, photo, options) {
    return this._request('/sendPhoto', _extends({
      chat_id: chatId,
      photo },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#sendaudio
     */
  sendAudio(chatId, audio, options) {
    return this._request('/sendAudio', _extends({
      chat_id: chatId,
      audio },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#senddocument
     */
  sendDocument(chatId, document, options) {
    return this._request('/sendDocument', _extends({
      chat_id: chatId,
      document },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#sendsticker
     */
  sendSticker(chatId, sticker, options) {
    return this._request('/sendSticker', _extends({
      chat_id: chatId,
      sticker },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#sendvideo
     */
  sendVideo(chatId, video, options) {
    return this._request('/sendVideo', _extends({
      chat_id: chatId,
      video },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#sendvoice
     */
  sendVoice(chatId, voice, options) {
    return this._request('/sendVoice', _extends({
      chat_id: chatId,
      voice },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#sendvideonote
     */
  sendVideoNote(chatId, videoNote, options) {
    return this._request('/sendVideoNote', _extends({
      chat_id: chatId,
      video_note: videoNote },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#sendmediagroup
     */
  sendMediaGroup(chatId, media, options) {
    return this._request('/sendMediaGroup', _extends({
      chat_id: chatId,
      media },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#sendlocation
     */
  sendLocation(
  chatId,
  { latitude, longitude },
  options)
  {
    return this._request('/sendLocation', _extends({
      chat_id: chatId,
      latitude,
      longitude },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#editmessagelivelocation
     */
  editMessageLiveLocation(
  { latitude, longitude },
  options)
  {
    return this._request('/editMessageLiveLocation', _extends({
      latitude,
      longitude },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#stopmessagelivelocation
     */
  stopMessageLiveLocation(identifier) {
    return this._request('/stopMessageLiveLocation', _extends({},
    identifier));

  }

  /**
     * https://core.telegram.org/bots/api#sendvenue
     */
  sendVenue(
  chatId,
  {
    latitude,
    longitude,
    title,
    address },






  options)
  {
    return this._request('/sendVenue', _extends({
      chat_id: chatId,
      latitude,
      longitude,
      title,
      address },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#sendcontact
     */
  sendContact(
  chatId,
  {
    phone_number,
    first_name },

  options)
  {
    return this._request('/sendContact', _extends({
      chat_id: chatId,
      phone_number,
      first_name },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#sendchataction
     */
  sendChatAction(chatId, action) {
    return this._request('/sendChatAction', {
      chat_id: chatId,
      action });

  }

  /**
     * https://core.telegram.org/bots/api#editmessagetext
     */
  editMessageText(text, options) {
    return this._request('/editMessageText', _extends({
      text },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#editmessagecaption
     */
  editMessageCaption(caption, options) {
    return this._request('/editMessageCaption', _extends({
      caption },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#editmessagereplymarkup
     */
  editMessageReplyMarkup(replyMarkup, options) {
    return this._request('/editMessageReplyMarkup', _extends({
      reply_markup: replyMarkup },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#deletemessage
     */
  deleteMessage(chatId, messageId) {
    return this._request('/deleteMessage', {
      chat_id: chatId,
      message_id: messageId });

  }

  /**
     * https://core.telegram.org/bots/api#kickchatmember
     */
  kickChatMember(chatId, userId, options) {
    return this._request('/kickChatMember', _extends({
      chat_id: chatId,
      user_id: userId },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#unbanChatMember
     */
  unbanChatMember(chatId, userId) {
    return this._request('/unbanChatMember', {
      chat_id: chatId,
      user_id: userId });

  }

  /**
     * https://core.telegram.org/bots/api#restrictChatMember
     */
  restrictChatMember(chatId, userId, options) {
    return this._request('/restrictChatMember', _extends({
      chat_id: chatId,
      user_id: userId },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#promoteChatMember
     */
  promoteChatMember(chatId, userId, options) {
    return this._request('/promoteChatMember', _extends({
      chat_id: chatId,
      user_id: userId },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#exportChatInviteLink
     */
  exportChatInviteLink(chatId) {
    return this._request('/exportChatInviteLink', {
      chat_id: chatId });

  }

  /**
     * https://core.telegram.org/bots/api#setChatPhoto
     */
  setChatPhoto(chatId, photo) {
    return this._request('/setChatPhoto', {
      chat_id: chatId,
      photo });

  }

  /**
     * https://core.telegram.org/bots/api#deleteChatPhoto
     */
  deleteChatPhoto(chatId) {
    return this._request('/deleteChatPhoto', {
      chat_id: chatId });

  }

  /**
     * https://core.telegram.org/bots/api#setChatTitle
     */
  setChatTitle(chatId, title) {
    return this._request('/setChatTitle', {
      chat_id: chatId,
      title });

  }

  /**
     * https://core.telegram.org/bots/api#setChatDescription
     */
  setChatDescription(chatId, description) {
    return this._request('/setChatDescription', {
      chat_id: chatId,
      description });

  }

  /**
     * https://core.telegram.org/bots/api#setchatstickerset
     */
  setChatStickerSet(chatId, stickerSetName) {
    return this._request('/setChatStickerSet', {
      chat_id: chatId,
      sticker_set_name: stickerSetName });

  }

  /**
     * https://core.telegram.org/bots/api#deletechatstickerset
     */
  deleteChatStickerSet(chatId) {
    return this._request('/deleteChatStickerSet', {
      chat_id: chatId });

  }

  /**
     * https://core.telegram.org/bots/api#pinChatMessage
     */
  pinChatMessage(chatId, messageId, options) {
    return this._request('/pinChatMessage', _extends({
      chat_id: chatId,
      messsage_id: messageId },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#unpinChatMessage
     */
  unpinChatMessage(chatId) {
    return this._request('/unpinChatMessage', {
      chat_id: chatId });

  }

  /**
     * https://core.telegram.org/bots/api#leaveChat
     */
  leaveChat(chatId) {
    return this._request('/leaveChat', {
      chat_id: chatId });

  }

  /**
     * https://core.telegram.org/bots/api#getchatmemberscount
     */
  forwardMessage(
  chatId,
  fromChatId,
  messageId,
  options)
  {
    return this._request('/forwardMessage', _extends({
      chat_id: chatId,
      from_chat_id: fromChatId,
      message_id: messageId },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#sendinvoice
     */
  sendInvoice(
  chatId,
  product,








  options)
  {
    return this._request('/sendInvoice', _extends({
      chat_id: chatId },
    product,
    options));

  }

  /**
     * https://core.telegram.org/bots/api#answershippingquery
     */
  answerShippingQuery(shippingQueryId, ok, options) {
    return this._request('/answerShippingQuery', _extends({
      shipping_query_id: shippingQueryId,
      ok },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#answerprecheckoutquery
     */
  answerPreCheckoutQuery(
  preCheckoutQueryId,
  ok,
  options)
  {
    return this._request('/answerPreCheckoutQuery', _extends({
      pre_checkout_query_id: preCheckoutQueryId,
      ok },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#answerinlinequery
     */
  answerInlineQuery(
  inlineQueryId,
  results,
  options)
  {
    return this._request('/answerInlineQuery', _extends({
      inline_query_id: inlineQueryId,
      results },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#sendgame
     */
  sendGame(chatId, gameShortName, options) {
    return this._request('/sendGame', _extends({
      chat_id: chatId,
      game_short_name: gameShortName },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#setgamescore
     */
  setGameScore(userId, score, options) {
    return this._request('/setGameScore', _extends({
      user_id: userId,
      score },
    options));

  }

  /**
     * https://core.telegram.org/bots/api#getgamehighscores
     */
  getGameHighScores(userId, options) {
    return this._request('/getGameHighScores', _extends({
      user_id: userId },
    options));

  }}exports.default = TelegramClient;